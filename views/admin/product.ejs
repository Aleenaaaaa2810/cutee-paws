<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <title>Admin Dashboard</title>
  <style>
    /* Global Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Poppins', sans-serif;
    }

    body {
      display: flex;
      min-height: 100vh;
      background-color: #f4f5f7;
      color: #333;
    }

    .sidebar {
      width: 250px;
      background-color: #1e212d;
      color: #ffffff;
      display: flex;
      flex-direction: column;
      position: fixed;
      height: 100%;
      padding-top: 20px;
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);
    }

    .sidebar h2 {
      text-align: center;
      font-size: 24px;
      color: #f5a623;
      margin-bottom: 30px;
    }

    .sidebar a {
      padding: 15px 20px;
      font-size: 18px;
      color: #ffffff;
      text-decoration: none;
      transition: background 0.3s ease, color 0.3s ease;
    }

    .sidebar a:hover {
      background-color: #f5a623;
      color: #1e212d;
    }

    .sidebar a.active {
      background-color: #f5a623;
      color: #1e212d;
      font-weight: bold;
    }

    .main-content {
      margin-left: 250px;
      padding: 30px;
      width: calc(100% - 250px);
      transition: margin-left 0.3s ease;
    }

    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: #ffffff;
      padding: 20px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      margin-bottom: 30px;
      border-radius: 10px;
    }

    .header h1 {
      font-size: 24px;
      color: #333;
    }

    .table-container {
      overflow-x: auto;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      background: #fff;
      border-radius: 8px;
      overflow: hidden;
    }

    thead {
      background-color: #343a40;
      color: #fff;
    }

    th, td {
      padding: 15px;
      text-align: center;
      border: 1px solid #ddd;
    }

    tbody tr:nth-child(even) {
      background-color: #f2f2f2;
    }

    tbody tr:hover {
      background-color: #e9ecef;
    }

    .btn {
      padding: 8px 12px;
      border: none;
      border-radius: 4px;
      font-size: 14px;
      cursor: pointer;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
    }

    .btn-danger {
      background-color: #dc3545;
      color: #fff;
    }

    .badge {
      display: inline-block;
      padding: 5px 10px;
      font-size: 12px;
      border-radius: 4px;
      color: #fff;
    }

    .badge-success {
      background-color: #28a745;
    }

    .badge-warning {
      background-color: #ffc107;
      color: #000;
    }
  </style>
</head>
<body>
  <!-- Sidebar -->
  <%-include("../../views/partials/admin/header.ejs")%>

  <!-- Main Content -->
  <div class="main-content">
    <div class="header">
      <h1>Product Management</h1>
    </div>

    <!-- Product Table -->
    <div class="table-container">
      <table>
        <thead>
          <tr>
            <th>#</th>
            <th>Product Name</th>
            <th>Category</th>
            <th>Sale Price</th>
            <th>Offer Price</th>
           <th>Offer </th>
           <th>status</th>
            <th>Quantity</th>
            <th>Edit</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% if (products && products.length > 0) { %>
            <% products.forEach((product, index) => { %>
              <tr>
                <td><%= index + 1 %></td>
                <td><%= product.name %></td>
                <td><%= product.category ? product.category.name : 'Uncategorized' %></td>
                <td>â‚¹<%= product.salePrice %></td>
                <td>
                  <% if (product.productOffer === 0) { %>
                    <button class="btn btn-info" style="width: 100px">
                      <a href="#" class="text-white" onclick="addOffer('<%= product._id %>')">Add Offer</a>
                    </button>
                  <% } else { %>
                    <button class="btn btn-info" style="width: 100px">
                      <a href="#" class="text-white" onclick="removeoffer('<%= product._id %>')">Remove</a>
                    </button>
                  <% } %>
                </td>
                <td>
                  <% if (product.productOffer) { %>
                    <%= product.productOffer %>%
                  <% } else { %>
                    0%
                  <% } %>
                </td>
                <td>
                  <% if (product.isBlocked) { %>
                    <span class="badge badge-warning">Blocked</span>
                  <% } else { %>
                    <span class="badge badge-success">Active</span>
                  <% } %>
                </td>
                <td><%= product.quantity || 'N/A' %></td>
                <td>
                  <a href="/admin/editProduct?productId=<%= product._id %>">
                    <button class="btn btn-primary">Edit</button>
                  </a>
                </td>
                <td>
                  <% if (product.isBlocked) { %>
                    <form action="/admin/unblockProduct/<%= product._id %>" method="POST" style="display:inline;">
                      <button class="btn btn-danger" onclick="confirmAction(event, 'Do you want to unblock this product?')">Unblock</button>
                    </form>
                  <% } else { %>
                    <form action="/admin/blockProduct/<%= product._id %>" method="POST" style="display:inline;">
                      <button class="btn btn-primary" onclick="confirmAction(event, 'Do you want to block this product?')">Block</button>
                    </form>
                  <% } %>
                </td>
              </tr>
            <% }); %>
          <% } else { %>
            <tr>
              <td colspan="8">No products available.</td>
            </tr>
          <% } %>
        </tbody>
        
      </table>
    </div>
  </div>


  <script>
    function confirmAction(event, message) {
      event.preventDefault();
      Swal.fire({
        title: 'Are you sure?',
        text: message,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes'
      }).then((result) => {
        if (result.isConfirmed) {
          event.target.closest('form').submit(); 
        }
      });
    }



    async function addOffer(productId) {
  // Prompt user to enter the offer percentage
  const { value: amount } = await Swal.fire({
    title: 'Offer in percentage',
    input: 'number',
    inputLabel: 'Percentage',
    inputPlaceholder: '%',
    inputValidator: (value) => {
      if (!value || isNaN(value)) {
        return 'Please enter a valid number!';
      }
    }
  });

  // Validate the input amount before making the AJAX call
  if (!amount || amount < 0 || amount > 100) {
    Swal.fire('Invalid Input', 'Please enter a percentage between 0 and 100.', 'error');
    return;
  }else if(amount){
    try {
      const response=await fetch("/admin/addProductOffer",{
                method:"POST",
                headers:{
                    'content-type':"application/json",
                },
                body:JSON.stringify({
                    percentage:amount,
                    productId: productId,
                }),
              })
              const data=await response.json();
            if(response.ok && data.status===true){
                Swal.fire(
                    "Offer Added",
                    "The offer has been added",
                    "success"
                ).then(()=>{
                    location.reload();

                })}
              else{
        Swal.fire("Failed",data.message ||"Adding offer failed", "error")
       }


    } catch (error) {
      Swal.fire(
        
                "Error",
                "An error occure while adding the offer",
                "error"
            )
            console.log("Error adding offer ",error)
            
        }}
  }
 


  async function removeoffer(productId) {
  try {
    const response = await fetch("/admin/removeProductOffer", {
      method: "POST",
      headers: {
        "content-type": "application/json",
      },
      body: JSON.stringify({ productId }),
    });

    const data = await response.json(); // Ensure proper parsing

    if (response.ok && data.status === true) {
      Swal.fire(
        "Offer Removed",
        "The offer has been successfully removed.",
        "success"
      ).then(() => {
        location.reload();
      });
    } else {
      Swal.fire(
        "Failed",
        data.message || "Failed to remove the offer.",
        "error"
      );
    }
  } catch (error) {
    Swal.fire(
      "Error",
      "An error occurred while removing the offer.",
      "error"
    );
    console.error("Error removing offer:", error);
  }
}


  </script>
</body>
</html> 