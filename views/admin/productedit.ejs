<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <title>Admin Dashboard - Edit Product</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.css">
  <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.js"></script>
  <link rel="stylesheet" href="/css/profileadd.css">
</head>
<body>
  <!-- Sidebar -->
  <%- include("../../views/partials/admin/header.ejs") %>

  <!-- Main content -->
  <div class="main-content">
    <div class="edit-product-form">
      <h2>Edit Product</h2>
      <form action="/admin/updateProduct/<%= product._id %>" method="POST" enctype="multipart/form-data"> 
        <!-- Product Name -->
        <div class="form-group">
          <label for="product-name">Product Name</label>
          <input type="text" id="product-name" name="name" value="<%= product.name %>" required>
        </div>

        <!-- Description -->
        <div class="form-group">
          <label for="description">Full Description</label>
          <textarea id="description" name="description" required><%= product.description %></textarea>
        </div>

        <!-- Regular Price -->
        <div class="form-group">
          <label for="regular-price">Regular Price</label>
          <input type="text" id="regular-price" name="regularPrice" value="<%= product.regularPrice %>" required>
        </div>

        <!-- Sale Price -->
        <div class="form-group">
          <label for="sale-price">Sale Price</label>
          <input type="text" id="sale-price" name="salePrice" value="<%= product.salePrice %>" required>
        </div>

        <!-- Quantity -->
        <div class="form-group">
          <label for="quantity">Quantity</label>
          <input type="number" id="quantity" name="quantity" value="<%= product.quantity %>" required>
        </div>

        <!-- Category -->
        <div class="form-group">
          <label for="category">Category</label>
          <select id="category" name="categoryId" required>
            <% for (let i = 0; i < cat.length; i++) { %>
              <option value="<%= cat[i]._id %>" <%= String(cat[i]._id) === String(product.category) ? 'selected' : '' %>><%= cat[i].name %></option>
            <% } %>
          </select>
        </div>

        <!-- Existing Images -->
        <% product.productImage.forEach((image, index) => { %>
          <div id="image-<%= index %>">
            <img src="/uploads/<%= image %>" alt="Image <%= index + 1 %>" style="width: 50px; height: 60px;">
            <button onclick="deleteImage('<%= product._id %>', '<%= image %>')">Delete</button>

          </div>
        <% }); %>

        <!-- Image Upload -->
        <div class="form-group">
          <label for="image1">Choose Image 1</label>
          <input type="file" id="image1" name="image1" accept="image/*">
        </div>

        <div class="form-group">
          <label for="image2">Choose Image 2</label>
          <input type="file" id="image2" name="image2" accept="image/*">
        </div>

        <div class="form-group">
          <label for="image3">Choose Image 3</label>
          <input type="file" id="image3" name="image3" accept="image/*">
        </div>

        <!-- Submit Button -->
       <a href="/product"> <button type="submit">Update Product</button></a>
      </form>
    </div>
  </div>

  <script>
    // Handle form submission
    async function handleFormSubmit(event) {
      event.preventDefault();
      const formData = new FormData(event.target);

      try {
        const response = await fetch(event.target.action, {
          method: 'POST',
          body: formData
        });
        const result = await response.json();
        if (result.success) {
          Swal.fire('Success', 'Product updated successfully!', 'success');
        } else {
          Swal.fire('Error', result.error || 'Failed to update product', 'error');
        }
      } catch (err) {
        Swal.fire('Error', 'An unexpected error occurred.', 'error');
      }
    }

    // Delete Image
    async function deleteImage(productId, imageId) {
    try {
        const response = await fetch(`/admin/delete-image/${productId}/${imageId}`, {
            method: 'DELETE',
        });
        const result = await response.json();
        if (response.ok) {
            alert(result.message);
            location.reload(); // Reload the page to update UI
        } else {
            alert(result.message || 'Error deleting image');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Failed to delete image');
    }
}

  </script>
</body>
</html>
