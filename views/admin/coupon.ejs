<%- include("../../views/partials/admin/header") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
  .card {
    margin-left: 255px;
  }

  .card-body {
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .form-label {
    font-weight: bold;
    margin-bottom: 5px;
  }

  .form-control {
    width: 100%;
    padding: 10px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
  }

  .btn-primary {
    background-color: #877d2c;
    border: none;
    color: #fff;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
  }

  .btn-primary:hover {
    background-color: #979ea5;
  }

  .error-message {
    color: red;
    font-size: 14px;
  }

  .content-main .d-flex {
    display: flex;
    align-items: flex-start;
    gap: 20px; /* Space between the card and table */
  }

  .card {
    flex: 1; /* The card takes less space */
    min-width: 300px;
    margin-top: 112px;
  }

  .table-container {
    flex: 2; /* The table takes more space */
  }

  .table {
    width: 100%;
    text-align: center;
    margin-bottom: 20px;
    border-collapse: collapse; /* Makes borders collapse together */
  }

  .table th,
  .table td {
    vertical-align: middle;
    padding: 12px; /* Padding inside the table cells */
    border: 1px solid #ddd; /* Adds border to cells */
  }

  .table th {
    font-weight: bold;
    text-transform: uppercase;
    background-color: #f2f2f2; /* Light gray background for header */
  }

  .table td {
    background-color: #ffffff; /* White background for data cells */
  }

  .table-hover tbody tr:hover {
    background-color: #f1f1f1; /* Light gray when hovering over rows */
  }

  .btn {
    padding: 5px 10px;
    font-size: 14px;
  }

  .table-responsive {
    overflow-x: auto;
  }
</style>


</style>

<section class="content-main">
  <div class="d-flex">
    <!-- Left Side: Card -->
    <div class="card flex-grow-1 me-3">
      <div class="card-header text-center bg-primary text-white">
        <h3>Add Coupon</h3>
      </div>
      <div class="card-body">
        <form method="post" action="/admin/createcoupon" id="addCouponForm">
          <div class="mb-4">
            <label for="coupon-name" class="form-label">Coupon Name</label>
            <input
              type="text"
              id="coupon-name"
              name="couponName"
              placeholder="Enter coupon name (e.g., FESTIVE20)"
              class="form-control"
            />
            <div id="error-coupon-name" class="error-message"></div>
          </div>

          <div class="row">
            <div class="col-md-6">
              <label for="startingDate" class="form-label">Start Date</label>
              <input
                type="date"
                name="startDate"
                class="form-control"
                id="startingDate"
              />
              <div id="error-start-date" class="error-message"></div>
            </div>
            <div class="col-md-6">
              <label for="expiringDate" class="form-label">End Date</label>
              <input
                type="date"
                name="endDate"
                class="form-control"
                id="expiringDate"
              />
              <div id="error-end-date" class="error-message"></div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-6">
              <label for="offer-price" class="form-label">Offer Price</label>
              <input
                type="number"
                name="offerPrice"
                placeholder="Discount Amount (e.g., 100)"
                class="form-control"
              />
              <div id="error-offer-price" class="error-message"></div>
            </div>
            <div class="col-md-6">
              <label for="minimum-price" class="form-label">Minimum Price</label>
              <input
                type="number"
                name="minimumPrice"
                placeholder="Minimum Cart Value (e.g., 500)"
                class="form-control"
              />
              <div id="error-minimum-price" class="error-message"></div>
            </div>
          </div>

          <div class="d-grid">
            <button type="submit" onclick="return validateForm(event)" class="btn btn-primary mt-4">Add Coupon</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Right Side: Table -->
    <div class="table-container flex-grow-2" style="margin-top: 150px;">
      <div class="table-responsive">
        <table class="table table-hover">
          <thead>
            <tr>
              <th>Name</th>
              <th>Created On</th>
              <th>Expire On</th>
              <th>Offer Price</th>
              <th>Minimum Price</th>
              <th>Status</th>
              <th>Edit</th>
              <th>Delete</th>
            </tr>
          </thead>
          <tbody>


            <%for (let i=0;i<coupon.length;i++){%>
            <tr>
              <td class="text-start"><%=coupon[i].name%></td>
              <td class="text-start"><%=new Date (coupon[i].createdOn).toLocaleDateString('en-US')%></td>
              <td class="text-start"><%=new Date (coupon[i].expireOn).toLocaleDateString('en-US')%></td>
              <td class="text-start"><%=coupon[i].offerPrice%></td>
              <td class="text-start"><%=coupon[i].minimumPrice%></td>
              <td class="text-start"><%=coupon[i].isList%></td>
              <td class="text-start">
                <a href="/admin/editcoupon?id=<%=coupon[i]._id%>" class="btn btn-primary btn-sm">Edit</a>
               
              </td>
              <td> <a href="#" onclick="confirmDelete('<%=coupon[i]._id%>')" class="btn btn-danger btn-sm" style="height: 35px;width: 105px;"">Delete</a>

                <!-- <a href=""  onclick="  class="btn btn-primary btn-sm">Delete</a></td> -->
            </tr>
            <%}%>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</section>


<script>
 function validateForm() {
   document.querySelectorAll(".error-message").forEach((element) => (element.innerHTML = ""));
   const sDate = document.getElementsByName("startDate")[0].value;
   const eDate = document.getElementsByName("endDate")[0].value;
   const sDateObj = new Date(sDate);
   const eDateObj = new Date(eDate);
   const todayDateObj = new Date();
   todayDateObj.setHours(0, 0, 0, 0);


   if (sDateObj > eDateObj) {
     document.getElementById("error-end-date").innerHTML ="End date should be after the start date";
     return false;
   }


   if (sDateObj <= todayDateObj) {
     document.getElementById("error-start-date").innerHTML ="Starting date should be greater than or equal to today's date";
     return false;
   }


   let name = document.getElementsByName("couponName")[0].value;
   const nameRegex = /^[A-Za-z0-9]{1,50}$/;


   if (!nameRegex.test(name)) {
     document.getElementById("error-coupon-name").innerHTML =
       "Coupon Name error";
     return false;
   }


   const offerPriceInput = document.getElementsByName("offerPrice")[0];
   const minimumPriceInput = document.getElementsByName("minimumPrice")[0];


   const offerPrice = offerPriceInput.value.trim() !== ""? parseInt(offerPriceInput.value): NaN;
   const minimumPrice = minimumPriceInput.value.trim() !== ""? parseInt(minimumPriceInput.value): NaN;


   if (isNaN(offerPrice) || isNaN(minimumPrice) || offerPrice >= minimumPrice) {
     document.getElementById("error-offer-price").innerHTML = "Offer Price must be greater than Minimum Price";
     return false;
   }


   if (isNaN(offerPrice) || isNaN(minimumPrice)) {
     document.getElementById("error-offer-price").innerHTML ="Please enter numeric values for Offer Price and Minimum Price";
     return false;
   }


       const formData = {
       couponName: name,
       startDate: sDateObj,
       endDate: eDateObj,
       offerPrice: offerPrice,
       minimumPrice: minimumPrice
   };
   return true;
 }


function confirmDelete(couponId) {
  Swal.fire({
    title: "Are you sure?",
    text: "You won't be able to revert this!",
    icon: "warning",
    showCancelButton: true,
    confirmButtonColor: "#d33",
    cancelButtonColor: "#3085d6",
    confirmButtonText: "Yes, delete it!",
  }).then((result) => {
    if (result.isConfirmed) {
      deleteCoupon(couponId);
    }
  });
}
function deleteCoupon(couponId) {
  fetch(`/admin/deletecoupon?id=${couponId}`, {
    method: "DELETE",
  })
  .then(response => {
    if (response.ok) {
      Swal.fire({
        icon: "success",
        title: "Deleted!",
        text: "The coupon has been deleted.",
        confirmButtonText: "OK",
      }).then(() => {
       
        window.location.reload(); // Reload the page to reflect changes
      });
    } else {
      throw new Error("Failed to delete");
    }
  })
  .catch(error => {
    Swal.fire({
      icon: "error",
      title: "Error!",
      text: "Failed to delete the coupon. Please try again.",
    });
  });
}

</script>
<%- include("../../views/partials/admin/footer") %>






