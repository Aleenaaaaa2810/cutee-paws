<%- include("../../views/partials/user/header") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    <style>
      
        .cart-main {
            padding: 50px 20px;
        }

        .cart-section {
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 1000px;
            margin: 0 auto;
        }

        .cart-section h2 {
            font-size: 2rem;
            margin-bottom: 20px;
            text-align: center;
        }
        .cart-items-list {
    list-style: none; /* Removes bullets */
    padding: 0; /* Removes default padding */
  }


  .cart-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 15px 0;
    border-bottom: 1px solid #ddd;
    text-align: left; /* Align content to the left */
    gap: 20px; /* Adds spacing between elements */
  }

        .cart-item img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
        }

        .cart-item-details {
    display: flex;
    align-items: center;
    gap: 15px;
    flex-grow: 1;
    text-align: left; /* Ensures all details align to the left */
  }

        .cart-item-details strong {
            font-size: 1.2rem;
            color: #333;
        }

        .cart-item-details p {
            color: #666;
        }

        .remove-btn {
    background-color: #6A1E55;
    color: white;
    border: none;
    padding: 8px 12px;
    font-size: 0.9rem;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s;
  }

        .remove-btn:hover {
            background-color: #A64D79;
        }

        /* Cart Total */
        .cart-total {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 2px solid #f0f0f0;
        }

        .cart-total p {
            font-size: 1.1rem;
            font-weight: bold;
            color: #333;
        }

        .checkout-btn {
            background-color: #3B1C32;
            color: white;
            border: none;
            padding: 12px 30px;
            font-size: 1.1rem;
            cursor: pointer;
            border-radius: 25px;
            transition: background-color 0.3s;
        }

        .checkout-btn:hover {
            background-color: #3B1C32;
        }

        /* Continue Shopping Section */
        .continue-shopping {
            text-align: center;
            margin-top: 30px;
        }

        .continue-btn {
            background-color: #131313;
            color: white;
            border: none;
            padding: 12px 30px;
            font-size: 1.1rem;
            cursor: pointer;
            border-radius: 25px;
            transition: background-color 0.3s;
        }

        .continue-btn:hover {
            background-color: #1976d2;
        }

        /* Footer Styling */
        .footer {
            background-color: #333;
            color: white;
            text-align: center;
            padding: 20px 0;
        }

        .footer-content {
            max-width: 1200px;
            margin: 0 auto;
            font-size: 1rem;
        }
        .quantity-controls {
  display: flex;
  align-items: center;
  gap: 10px;
}

.quantity-btn {
  background-color: #A64D79;
  color: white;
  border: none;
  padding: 5px 10px;
  font-size: 1rem;
  cursor: pointer;
  border-radius: 5px;
  transition: background-color 0.3s;
}

.quantity-btn:hover {
  background-color: #A64D79;
}

.quantity {
  font-size: 1.2rem;
  font-weight: bold;
  color: #333;
  min-width: 30px;
  text-align: center;
}

    </style>
</head>

<body>
  <!-- Header Section -->


  <!-- Main Content -->
  <main class="cart-main">
    <section class="cart-section">
      <h2>Your Shopping Cart</h2>
      <div id="cart">
        <!-- Dynamic Cart Items -->
        <ul class="cart-items-list">
          <% cart.items.forEach(item => { %>
            <% if (item.productId?.quantity > 0) { %>
              <li class="cart-item" data-item-id="<%= item._id %>" data-stock="<%= item.productId?.quantity %>">
                <div class="cart-item-details">
                  <img src="/uploads/<%= item?.productId?.productImage[0] %>" alt="Product Image">
                  <div>
                    <strong><%= item.productId?.name %></strong>
                    <p>Price: ₹<%= item.price %></p>
                    <p>Total: ₹<%= item.totalPrice %></p>
                    <div class="quantity-controls">
                      <button 
                        class="quantity-btn decrease" 
                        data-action="decrease" 
                        data-item-id="<%= item._id %>" 
                        <%= item.quantity <= 1 ? 'disabled' : '' %>>-</button>
                      <span class="quantity" id="quantity-<%= item._id %>"><%= item.quantity %></span>
                      <button 
                        class="quantity-btn increase" 
                        data-action="increase" 
                        data-item-id="<%= item._id %>" 
                        <%= item.quantity >= item.productId?.quantity ? 'disabled' : '' %>>+</button>
                    </div>
                  </div>
                </div>
                <button class="remove-btn" onclick="removeItem('<%= item._id %>')">Remove</button>
              </li>
            <% } else { %>
              <li class="cart-item out-of-stock">
                <div class="cart-item-details">
                  <img src="/uploads/<%= item?.productId?.productImage[0] %>" alt="Product Image">
                  <div>
                    <strong><%= item.productId?.name %></strong>
                    <p style="color: red; font-weight: bold;">Out of Stock</p>
                  </div>
                </div>
              </li>
            <% } %>
          <% }) %>
          
        </ul>
        
        <!-- Cart Total -->
        <div class="cart-total">
          <p><strong>Total:</strong> ₹<%= cart.items.reduce((total, item) => total + item.totalPrice, 0) %></p>

          <button class="checkout-btn" onclick="window.location.href='/Order'">Proceed to Checkout</button>
          
        </div>
      </div>
    </section>

    <!-- Continue Shopping Section -->
    <section class="continue-shopping">
      <h2>Continue Shopping</h2>
      <button class="continue-btn" onclick="window.location.href='/shop'">Go Back to Shop</button>
    </section>
  </main>

  <!-- Footer Section -->
  <%- include("../../views/partials/user/footer") %>
</body>


<script>
$(document).ready(function () {
  $('.quantity-btn').on('click', function () {
    const action = $(this).data('action'); // 'increase' or 'decrease'
    const itemId = $(this).data('item-id');
    const quantityElement = $(`#quantity-${itemId}`);
    const itemRow = $(`.cart-item[data-item-id="${itemId}"]`);
    const totalElement = $('.cart-total p');

    $.ajax({
      url: action === 'increase' ? '/cart/increase' : '/cart/decrease',
      type: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({ itemId: itemId }),
      success: function (data) {
  if (data.dbCart && data.dbCart.items) {
    const updatedItem = data.dbCart.items.find(item => item._id === itemId);

    if (updatedItem) {
      const newQuantity = updatedItem.quantity;
      const newTotalPrice = updatedItem.totalPrice;

      // Update UI
      quantityElement.text(newQuantity);
      itemRow.find('.cart-item-details p:nth-of-type(2)').text(`Total: ₹${newTotalPrice}`);

      const newCartTotal = data.dbCart.items.reduce((total, item) => total + item.totalPrice, 0);
      totalElement.html(`<strong>Total:</strong> ₹${newCartTotal}`);

      // Toggle disable state of buttons based on quantity
      itemRow.find('.quantity-btn.decrease').prop('disabled', newQuantity <= 1);
      const maxStock = Number(itemRow.data('stock'));
      itemRow.find('.quantity-btn.increase').prop('disabled', newQuantity >= maxStock);

      // SweetAlert when quantity reaches minimum limit (1)
      if (newQuantity === 1) {
        Swal.fire({
          icon: 'info',
          title: 'Minimum Limit Reached',
          text: 'Minimum Limit is 1',
          timer: 2000,
          showConfirmButton: false
        });
      }

      // SweetAlert when quantity exceeds or equals stock limit
      if (newQuantity ===5) {
        Swal.fire({
          icon: 'warning',
          title: 'Maximum Limit Reached',
          text: 'Maximum Limit is 5',
          timer: 2000,
          showConfirmButton: false
        });
      }
    } else {
      Swal.fire('Error', 'Item not found in the cart data.', 'error');
    }
  } else {
    Swal.fire('Error', data.error || 'Unable to update quantity.', 'error');
  }
}




    });
  });
});


 // Function to remove an item from the cart via AJAX
 window.onload = function () {
  console.log("Page fully loaded!");
};

function removeItem(itemId) {
  Swal.fire({
    title: 'Are you sure?',
    text: "Do you want to remove this item from your cart?",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Yes, remove it!'
  }).then((result) => {
    if (result.isConfirmed) {
      // Send an AJAX request to remove the item from the cart
      fetch('/remove-item', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ itemId: itemId })
      })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Remove the item from the UI
            const itemElement = document.querySelector(`.cart-item[data-item-id="${itemId}"]`);
            if (itemElement) {
              itemElement.remove();
            }

            // Show success alert and refresh the page
            Swal.fire(
              'Removed!',
              'The item has been removed from your cart.',
              'success'
            ).then(() => {
              // Refresh the page
              location.reload();
            });
          } else {
            Swal.fire(
              'Error',
              'There was a problem removing the item.',
              'error'
            );
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire(
            'Error',
            'An unexpected error occurred.',
            'error'
          );
        });
    }
  });
}


</script>

</html>
