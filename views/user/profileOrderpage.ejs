<%- include("../../views/partials/user/header") %>
<title>Your Orders</title>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
  h1 {
    text-align: center;
    margin-bottom: 30px;
    color: #1a202c;
  }
  .order-section {
    margin-bottom: 40px;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    overflow: hidden;
  }
  .order-header {
    background-color: #edf2f7;
    padding: 15px;
    border-bottom: 1px solid #e2e8f0;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .order-header h2 {
    margin: 0;
    font-size: 1.2rem;
    color: #2d3748;
  }
  .order-header p {
    margin: 5px 0;
    font-size: 0.95rem;
    color: #4a5568;
  }
  table {
    width: 100%;
    border-collapse: collapse;
  }
  th, td {
    padding: 12px;
    text-align: left;
  }
  th {
    background-color: #e2e8f0;
    color: #2d3748;
    text-transform: uppercase;
    font-size: 0.85rem;
    letter-spacing: 0.05rem;
  }
  td {
    border-bottom: 1px solid #e2e8f0;
    font-size: 0.95rem;
    color: #4a5568;
  }
  tr:last-child td {
    border-bottom: none;
  }
  .no-orders {
    text-align: center;
    color: #718096;
    font-size: 1.1rem;
    margin-top: 20px;
  }
  .btn {
    display: inline-block;
    padding: 10px 20px;
    background-color: #e53e3e;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    font-size: 0.95rem;
    transition: background-color 0.3s ease;
    border: none;
    cursor: pointer;
  }
  .btn:hover {
    background-color: #c53030;
  }
  .product-image {
  max-width: 100px;
  max-height: 100px;
  object-fit: cover; /* Ensures the image scales without distortion */
}

</style>
</head>
<body>
  <div class="container">
    <h1>Your Orders</h1>

    <% if (orders && orders.length > 0) { %>
      <% orders.forEach(order => { %>
        <div class="order-section">
          <div class="order-header">
            <div>
              <h2>Order ID: <%= order.orderId %></h2>
              <p><strong>Date:</strong> <%= new Date(order.createdOn).toLocaleDateString() %></p>
              <p><strong>Status:</strong> <%= order.status %></p>
              <p><strong>Total Amount:</strong> ₹<%= order.finalAmount.toFixed(2) %></p>
            </div>
            <% if (order.status.toLowerCase() === 'delivered') { %>
              <button class="btn cancel-button" data-order-id="<%= order.orderId %>">Return Order</button>
            <% } else if(order.status.toLowerCase() === 'cancelled'){ %>
              <button class="btn disabled" data-message="This order is already cancelled">Cancelled</button>
            <% }else if(order.status.toLowerCase() === 'returned'){ %>
              <button class="btn disabled" data-message="This order is already cancelled">Returned</button>
            <% }else{ %>
              <button class="btn cancel-button" data-order-id="<%= order.orderId %>"> Cancel Order</button>
              <% } %>
          </div>

          <table>
            <thead>
              <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Image</th>
              </tr>
            </thead>
            <tbody>
              <% order.orderedItems.forEach(item => { %>
                <tr>
                  <td><%= item.product.name %></td>
                  <td><%= item.quantity %></td>
                  <td>₹<%= item.price.toFixed(2) %></td>
                  <td>₹<%= (item.quantity * item.price).toFixed(2) %></td>
                  <td> 
                    <% if (item.product.productImage && item.product.productImage.length > 0) { %>
                      <img src="/uploads/<%= item.product.productImage[0] %>" alt="Product Image" class="product-image">
                    <% } else { %>
                      <p>No Image Available</p>
                    <% } %>
                  </td>
                
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      <% }); %>
    <% } else { %>
      <p class="no-orders">You have no orders yet.</p>
    <% } %>
  </div>

  <%- include("../../views/partials/user/footer.ejs") %>
  <script>
   document.querySelectorAll('.return-button').forEach(button => {
  button.addEventListener('click', function (event) {
    const orderId = this.getAttribute('data-order-id');

    // Show SweetAlert2 confirmation for returning the order
    Swal.fire({
      title: 'Are you sure?',
      text: "You are about to return this order!", // Correct text for return action
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, return it!',
      cancelButtonText: 'No, keep it'
    }).then((result) => {
      if (result.isConfirmed) {
        // Sending the return request
        fetch('/return-order', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ orderId: orderId })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire('Returned', data.message, 'success');
          } else {
            Swal.fire('Error', data.message, 'error');
          }
        })
        .catch(error => {
          Swal.fire('Error', 'Failed to return the order. Please try again.', 'error');
        });
      } else {
        Swal.fire('Cancelled', 'Your order is safe.', 'info');
      }
    });
  });
});

  </script>
  <script>
    // Adding an event listener to all cancel buttons
    document.querySelectorAll('.cancel-button').forEach(button => {
      button.addEventListener('click', function(event) {
        const orderId = this.getAttribute('data-order-id');
  
        // Show SweetAlert2 confirmation
        Swal.fire({
          title: 'Are you sure?',
          text: "You are about to cancel this order!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes, cancel it!',
          cancelButtonText: 'No, keep it'
        }).then((result) => {
          if (result.isConfirmed) {
            // Sending the cancellation request using fetch
            fetch('/cancel-order', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ orderId: orderId })
            })
            .then(response => response.json())
            .then(data => {
              // Show message returned from backend in SweetAlert
              if (data.success) {
                Swal.fire('Cancelled', data.message, 'success');
                // Optionally, remove the order from the list or refresh
              } else {
                Swal.fire('Error', data.message, 'error');
              }
            })
            .catch(error => {
              Swal.fire('Error', 'Failed to cancel the order. Please try again.', 'error');
            });
          } else {
            Swal.fire('Cancelled', 'Your order is safe.', 'info');
          }
        });
      });
    });
  </script>

    
</body>
</html>
